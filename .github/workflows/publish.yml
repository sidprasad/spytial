name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'test-pypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/spytial' || 'https://pypi.org/p/spytial' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install build twine pytest>=7.0.0 flake8>=6.0.0 black>=23.0.0
        
    - name: Run pre-publish tests
      run: |
        # Code quality checks
        echo "🔍 Running code quality checks..."
        black --check spytial/
        flake8 spytial/ --count --statistics --max-line-length=88 --extend-ignore=E203,W503
        
        # Run test suite
        echo "🧪 Running test suite..."
        python -m pytest test/ -v
        
        # Validation scenarios from copilot instructions
        echo "✅ Running validation scenarios..."
        python -c "
        import spytial
        
        # Basic visualization test
        data = {
            'name': 'John', 'age': 30, 'hobbies': ['reading', 'cycling'],
            'address': {'street': '123 Main St', 'city': 'Boston'}
        }
        result = spytial.diagram(data, method='file', auto_open=False)
        print(f'✓ Generated: {result}')
        
        import os
        assert os.path.exists(result)
        with open(result, 'r') as f:
            content = f.read()
            assert 'html' in content.lower() and len(content) > 1000
        print('✓ Basic visualization works')
        
        # Test class decorators
        @spytial.group(field='children', groupOn=0, addToGroup=1)
        @spytial.orientation(selector='value', directions=['above'])
        class Node:
            def __init__(self, value, children=None):
                self.value = value
                self.children = children or []
        
        node = Node('root', [Node('child1'), Node('child2')])
        result = spytial.diagram(node, method='file', auto_open=False)
        print('✓ Class annotations work')
        
        # Test object annotations
        my_list = [1, 2, 3, 4, 5]
        spytial.annotate_orientation(my_list, selector='items', directions=['horizontal'])
        result = spytial.diagram(my_list, method='file', auto_open=False)
        print('✓ Object annotations work')
        
        # Test provider system
        builder = spytial.CnDDataInstanceBuilder()
        data = {'test': 'data', 'nested': {'values': [1, 2, 3]}}
        instance = builder.build_instance(data)
        assert isinstance(instance, dict)
        print('✓ Provider system works')
        
        print('🎉 All validation scenarios passed!')
        "
        
    - name: Build package
      run: |
        echo "📦 Building package..."
        python -m build
        
    - name: Check distribution
      run: |
        echo "🔍 Checking distribution..."
        twine check dist/*
        
    - name: Publish to Test PyPI
      if: github.event.inputs.test_pypi == 'true'
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        
    - name: Publish to PyPI
      if: github.event.inputs.test_pypi != 'true'
      uses: pypa/gh-action-pypi-publish@v1.8.10
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Create release summary
      run: |
        echo "## 🚀 sPyTial Published Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Package:** spytial" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** $(python -c 'import spytial; print(spytial.__version__)' 2>/dev/null || echo '0.1.0')" >> $GITHUB_STEP_SUMMARY
        echo "**Target:** ${{ github.event.inputs.test_pypi == 'true' && 'Test PyPI' || 'PyPI' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Installation" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.event.inputs.test_pypi }}" == "true" ]; then
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'pip install --index-url https://test.pypi.org/simple/ spytial' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'pip install spytial' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
